<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Hanggi - NGNL</title>
    <link>https://hanggi.me/post/</link>
    <description>Recent content in Posts on Hanggi - NGNL</description>
    <image>
      <url>https://hanggi.me/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://hanggi.me/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 08 Feb 2022 10:24:47 +0900</lastBuildDate><atom:link href="https://hanggi.me/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2022 选择属于自己的编程语言与框架</title>
      <link>https://hanggi.me/post/dev-guide/programming-language-framework-recommendation/</link>
      <pubDate>Tue, 08 Feb 2022 10:24:47 +0900</pubDate>
      
      <guid>https://hanggi.me/post/dev-guide/programming-language-framework-recommendation/</guid>
      <description>&lt;p&gt;选择什么编程语言与框架一直都是容易引起争论的话题。&lt;/p&gt;
&lt;p&gt;因为编程语言与框架数量众多，每一种热门语言与框架都有各自的特点与一众忠实的追随者。&lt;/p&gt;
&lt;p&gt;如果一不小心触及到别人的饭碗，只要喊一句万能的 “PHP是世界上最好的语言！” 就能全身而退。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>你应该知道的命令行使用技巧</title>
      <link>https://hanggi.me/post/dev-guide/useful-command-line/</link>
      <pubDate>Wed, 17 Jun 2020 11:32:07 +0900</pubDate>
      
      <guid>https://hanggi.me/post/dev-guide/useful-command-line/</guid>
      <description>&lt;p&gt;常用命令行使用技巧，有些你可能已经知道，有些可能不知道。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>基于角色的访问控制 (RBAC): Permissions vs. Roles</title>
      <link>https://hanggi.me/post/dev-guide/rbac-basic/</link>
      <pubDate>Wed, 17 Jun 2020 11:00:44 +0900</pubDate>
      
      <guid>https://hanggi.me/post/dev-guide/rbac-basic/</guid>
      <description>&lt;p&gt;通常在我们确定一个用户的身份之后，我们需要确定这个用户是否可以访问他要访问的页面或资源（授权）。基于角色的访问控制（RBAC）是企业软件完成此操作的最常用方法之一。它具有高度的灵活性，并可以进行多种配置。
我们将在这里高层讨论角色和权限是什么，它们如何协同工作以及如何使用它们来检查访问权限。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在 Kubernetes 部署 PostgreSQL</title>
      <link>https://hanggi.me/post/kubernetes/k8s-postgresql/</link>
      <pubDate>Sat, 09 May 2020 11:55:16 +0900</pubDate>
      
      <guid>https://hanggi.me/post/kubernetes/k8s-postgresql/</guid>
      <description>&lt;p&gt;Kubernetes是一个开源容器编排系统，用于自动化容器化应用程序的部署，扩展和管理。 在 Kubernetes 上运行 PostgreSQL 数据库是目前经常会讨论到主题，因为 Kubernetes 提供了使用持久卷，有状态集等来配置有状态容器的方法。&lt;/p&gt;
&lt;p&gt;本文旨在提供在 Kubernetes 集群上运行 PostgreSQL 数据库的步骤。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在 Kubernetes 上部署 Drone 持续集成环境</title>
      <link>https://hanggi.me/post/deployment/drone-ci-k8s/</link>
      <pubDate>Sun, 26 Apr 2020 08:28:39 +0900</pubDate>
      
      <guid>https://hanggi.me/post/deployment/drone-ci-k8s/</guid>
      <description>&lt;p&gt;之前已经用 Docker 和 Docker-compose 搭建了 &lt;a href=&#34;https://hanggi.me/post/deployment/drone-ci&#34;&gt;Drone 的持续集成/部署环境&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这次我们将 Drone 部署到 Kubernetes 上。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Let&#39;s Encrypt 配合 Nginx 为 Discourse 添加 https 功能</title>
      <link>https://hanggi.me/post/deployment/lets-encrypt-tutorial/</link>
      <pubDate>Fri, 24 Apr 2020 10:24:47 +0900</pubDate>
      
      <guid>https://hanggi.me/post/deployment/lets-encrypt-tutorial/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s Encrypt 已经成为免费 https 的标配，与此同时 Nginx 也成为了反向代理的标配，不管是单节点服务还是k8s集群都会默认使用 Nginx。&lt;/p&gt;
&lt;p&gt;今天就用 Let&amp;rsquo;s Encrypt 配合 Nginx 为我们的 Discourse 添加 https 功能。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Homebrew 安装 Anaconda</title>
      <link>https://hanggi.me/post/dev-guide/brew-install-anaconda/</link>
      <pubDate>Mon, 06 Apr 2020 16:36:54 +0900</pubDate>
      
      <guid>https://hanggi.me/post/dev-guide/brew-install-anaconda/</guid>
      <description>&lt;p&gt;Anaconda是一个免费开源的Python和R语言的发行版本，用于计算科学（数据科学、机器学习、大数据处理和预测分析），Anaconda致力于简化包管理和部署。
Anaconda的包使用软件包管理系统Conda进行管理。超过1200万人使用Anaconda发行版本，并且Anaconda拥有超过1400个适用于Windows、Linux和MacOS的数据科学软件包。&lt;/p&gt;
&lt;p&gt;今天我们就在 MacOS 上安装一下 Anaconda。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Virtualbox Install Centos K8s</title>
      <link>https://hanggi.me/post/deployment/virtualbox-install-centos-k8s/</link>
      <pubDate>Thu, 09 Jan 2020 16:36:40 +0900</pubDate>
      
      <guid>https://hanggi.me/post/deployment/virtualbox-install-centos-k8s/</guid>
      <description></description>
    </item>
    
    <item>
      <title>gin 路由冲突问题解决方法</title>
      <link>https://hanggi.me/post/golang/wildcard-conflict/</link>
      <pubDate>Wed, 18 Dec 2019 13:50:07 +0900</pubDate>
      
      <guid>https://hanggi.me/post/golang/wildcard-conflict/</guid>
      <description>&lt;p&gt;想必很多人在使用 Gin 编写路由函数的时候遇到过以下问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;panic: wildcard route &amp;lsquo;:articleID&amp;rsquo; conflicts with existing children in path &amp;lsquo;/articles/:articleID&amp;rsquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如何解决这个问题呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PC 上使用 PS4 手柄模拟 Xbox 手柄输入</title>
      <link>https://hanggi.me/post/blacktech/ds4windows/</link>
      <pubDate>Wed, 11 Dec 2019 11:05:27 +0900</pubDate>
      
      <guid>https://hanggi.me/post/blacktech/ds4windows/</guid>
      <description>&lt;p&gt;使用 PS4 手柄运行 Steam 上的游戏通常不需要任何配置就可以完美适配。可见 Steam 对 PS4 手柄的支持是很好的。&lt;/p&gt;
&lt;p&gt;但是如果运行 Origin 上面的如极品飞车就会发现，Origin 对 PS4 手柄支持并不是很好。对于这种问题我们只需要一个软件就能轻松将 PS4 手柄输入模拟为 Xbox 手柄（亲测有效）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 Github Actions 自动部署 Hugo 到 Github Pages</title>
      <link>https://hanggi.me/post/deployment/github-actions-autodeploy-hugo-to-github-pages/</link>
      <pubDate>Wed, 20 Nov 2019 14:13:46 +0900</pubDate>
      
      <guid>https://hanggi.me/post/deployment/github-actions-autodeploy-hugo-to-github-pages/</guid>
      <description>&lt;p&gt;肯定有很多人发现自己的仓库里多出来了一个 &lt;code&gt;Actions&lt;/code&gt; 选项。 没错这就是 Github Actions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Drone.io - 搭建基于 Docker 的持续集成环境</title>
      <link>https://hanggi.me/post/deployment/drone-ci/</link>
      <pubDate>Fri, 15 Nov 2019 11:14:23 +0900</pubDate>
      
      <guid>https://hanggi.me/post/deployment/drone-ci/</guid>
      <description>&lt;p&gt;如果项目有持续集成的需求，对于开源项目直接上 Travis 就好了，还能显示个 build pass。国内的话可能会用 Jenkins，好处是免费、可定制化。最近也有很多公司从 Jenkins 转到 Buildkite，有兴趣的可以上网查查。&lt;/p&gt;
&lt;p&gt;有没有一种部署简单、支持私有仓库，且基于容器的持续集成工具呢？Drone.io 可能是最好的选择。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用 Makefile 构建 Go 程序</title>
      <link>https://hanggi.me/post/golang/makefile-for-golang/</link>
      <pubDate>Wed, 13 Nov 2019 11:12:54 +0900</pubDate>
      
      <guid>https://hanggi.me/post/golang/makefile-for-golang/</guid>
      <description>&lt;p&gt;用 Makefile 构建 go 程序&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gorilla Websocket</title>
      <link>https://hanggi.me/post/dev-guide/gorilla-websocket/</link>
      <pubDate>Tue, 15 Oct 2019 18:29:35 +0900</pubDate>
      
      <guid>https://hanggi.me/post/dev-guide/gorilla-websocket/</guid>
      <description>&lt;p&gt;基于 Gorilla Websocket 的开发手册&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>微服务全局唯一 ID</title>
      <link>https://hanggi.me/post/dev-guide/uid-comparison/</link>
      <pubDate>Tue, 27 Aug 2019 15:31:57 +0900</pubDate>
      
      <guid>https://hanggi.me/post/dev-guide/uid-comparison/</guid>
      <description>&lt;p&gt;ID 是数据库的重要组成部分，但是随着分布式服务的流行传统的自增主键已经无法满足我们的需求。&lt;/p&gt;
&lt;p&gt;一种全局唯一的 ID 变得不可或缺。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>go-micro 微服务开发手册【2】：go-micro</title>
      <link>https://hanggi.me/post/microservice/go-micro-guide-2/</link>
      <pubDate>Thu, 22 Aug 2019 16:44:37 +0900</pubDate>
      
      <guid>https://hanggi.me/post/microservice/go-micro-guide-2/</guid>
      <description>&lt;p&gt;微服务开发框架 - go-micro&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>go-micro 微服务开发手册【1】：介绍</title>
      <link>https://hanggi.me/post/microservice/go-micro-guide-1/</link>
      <pubDate>Wed, 21 Aug 2019 13:51:48 +0900</pubDate>
      
      <guid>https://hanggi.me/post/microservice/go-micro-guide-1/</guid>
      <description>&lt;p&gt;微服务开发手册。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GO GRPC 教程</title>
      <link>https://hanggi.me/post/golang/grpc-tutorial/</link>
      <pubDate>Mon, 19 Aug 2019 16:53:12 +0900</pubDate>
      
      <guid>https://hanggi.me/post/golang/grpc-tutorial/</guid>
      <description>&lt;p&gt;The Go language implementation of gRPC. HTTP/2 based RPC&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Flutter 安装手册</title>
      <link>https://hanggi.me/post/dev-guide/flutter-setup/</link>
      <pubDate>Sun, 18 Aug 2019 13:24:00 +0900</pubDate>
      
      <guid>https://hanggi.me/post/dev-guide/flutter-setup/</guid>
      <description>&lt;p&gt;Flutter是一个由谷歌开发的开源移动应用软件开发工具包，用于为Android和iOS开发应用，同时也将是Google Fuchsia下开发应用的主要工具。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>IDEA Java Spring 开发环境搭建</title>
      <link>https://hanggi.me/post/dev-guide/idea-java-springdraft/</link>
      <pubDate>Sat, 10 Aug 2019 15:40:03 +0900</pubDate>
      
      <guid>https://hanggi.me/post/dev-guide/idea-java-springdraft/</guid>
      <description>&lt;p&gt;尝试一下在IDEA开发Java Spring。
Spring 整个架构虽然强大，但确实比较重。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Vultr搭建CentOS开发环境</title>
      <link>https://hanggi.me/post/deployment/vultr-centos-setup/</link>
      <pubDate>Fri, 09 Aug 2019 15:40:03 +0900</pubDate>
      
      <guid>https://hanggi.me/post/deployment/vultr-centos-setup/</guid>
      <description>&lt;p&gt;准备在 Vultr 上搭建新的开发环境。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker 开发手册</title>
      <link>https://hanggi.me/post/dev-guide/docker-notes/</link>
      <pubDate>Wed, 10 Jul 2019 17:00:01 +0900</pubDate>
      
      <guid>https://hanggi.me/post/dev-guide/docker-notes/</guid>
      <description>&lt;p&gt;Docker 使用笔记&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go Json</title>
      <link>https://hanggi.me/post/golang/go-json/</link>
      <pubDate>Wed, 29 May 2019 11:41:03 +0900</pubDate>
      
      <guid>https://hanggi.me/post/golang/go-json/</guid>
      <description>&lt;p&gt;Golang json demo code.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go Http Request</title>
      <link>https://hanggi.me/post/golang/go-http-request/</link>
      <pubDate>Mon, 27 May 2019 16:55:50 +0900</pubDate>
      
      <guid>https://hanggi.me/post/golang/go-http-request/</guid>
      <description>&lt;p&gt;Golang http request demo code.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
