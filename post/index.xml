<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Hanggi - NGNL</title><link>http://hanggi.me/post/</link><description>Recent content in Posts on Hanggi - NGNL</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 26 Apr 2020 08:28:39 +0900</lastBuildDate><atom:link href="http://hanggi.me/post/index.xml" rel="self" type="application/rss+xml"/><item><title>在 Kubernetes 上部署 Drone 持续集成环境</title><link>http://hanggi.me/post/deployment/drone-ci-k8s/</link><pubDate>Sun, 26 Apr 2020 08:28:39 +0900</pubDate><guid>http://hanggi.me/post/deployment/drone-ci-k8s/</guid><description>&lt;p&gt;之前已经用 Docker 和 Docker-compose 搭建了 &lt;a href=&#34;http://hanggi.me/post/deployment/drone-ci&#34;&gt;Drone 的持续集成/部署环境&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这次我们将 Drone 部署到 Kubernetes 上。&lt;/p&gt;</description></item><item><title>Let&#39;s Encrypt 配合 Nginx 为 Discourse 添加 https 功能</title><link>http://hanggi.me/post/deployment/lets-encrypt-tutorial/</link><pubDate>Fri, 24 Apr 2020 10:24:47 +0900</pubDate><guid>http://hanggi.me/post/deployment/lets-encrypt-tutorial/</guid><description>&lt;p&gt;Let&amp;rsquo;s Encrypt 已经成为免费 https 的标配，与此同时 Nginx 也成为了反向代理的标配，不管是单节点服务还是k8s集群都会默认使用 Nginx。&lt;/p&gt;
&lt;p&gt;今天就用 Let&amp;rsquo;s Encrypt 配合 Nginx 为我们的 Discourse 添加 https 功能。&lt;/p&gt;</description></item><item><title>Homebrew 安装 Anaconda</title><link>http://hanggi.me/post/dev-guide/brew-install-anaconda/</link><pubDate>Mon, 06 Apr 2020 16:36:54 +0900</pubDate><guid>http://hanggi.me/post/dev-guide/brew-install-anaconda/</guid><description>&lt;p&gt;Anaconda是一个免费开源的Python和R语言的发行版本，用于计算科学（数据科学、机器学习、大数据处理和预测分析），Anaconda致力于简化包管理和部署。
Anaconda的包使用软件包管理系统Conda进行管理。超过1200万人使用Anaconda发行版本，并且Anaconda拥有超过1400个适用于Windows、Linux和MacOS的数据科学软件包。&lt;/p&gt;
&lt;p&gt;今天我们就在 MacOS 上安装一下 Anaconda。&lt;/p&gt;</description></item><item><title>gin 路由冲突问题解决方法</title><link>http://hanggi.me/post/golang/wildcard-conflict/</link><pubDate>Wed, 18 Dec 2019 13:50:07 +0900</pubDate><guid>http://hanggi.me/post/golang/wildcard-conflict/</guid><description>&lt;p&gt;想必很多人在使用 Gin 编写路由函数的时候遇到过以下问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;panic: wildcard route &amp;lsquo;:articleID&amp;rsquo; conflicts with existing children in path &amp;lsquo;/articles/:articleID&amp;rsquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如何解决这个问题呢？&lt;/p&gt;</description></item><item><title>PC 上使用 PS4 手柄模拟 Xbox 手柄输入</title><link>http://hanggi.me/post/blacktech/ds4windows/</link><pubDate>Wed, 11 Dec 2019 11:05:27 +0900</pubDate><guid>http://hanggi.me/post/blacktech/ds4windows/</guid><description>&lt;p&gt;使用 PS4 手柄运行 Steam 上的游戏通常不需要任何配置就可以完美适配。可见 Steam 对 PS4 手柄的支持是很好的。&lt;/p&gt;
&lt;p&gt;但是如果运行 Origin 上面的如极品飞车就会发现，Origin 对 PS4 手柄支持并不是很好。对于这种问题我们只需要一个软件就能轻松将 PS4 手柄输入模拟为 Xbox 手柄（亲测有效）。&lt;/p&gt;</description></item><item><title>Drone.io - 搭建基于 Docker 的持续集成环境</title><link>http://hanggi.me/post/deployment/drone-ci/</link><pubDate>Fri, 15 Nov 2019 11:14:23 +0900</pubDate><guid>http://hanggi.me/post/deployment/drone-ci/</guid><description>&lt;p&gt;如果项目有持续集成的需求，对于开源项目直接上 Travis 就好了，还能显示个 build pass。国内的话可能会用 Jenkins，好处是免费、可定制化。最近也有很多公司从 Jenkins 转到 Buildkite，有兴趣的可以上网查查。&lt;/p&gt;
&lt;p&gt;有没有一种部署简单、支持私有仓库，且基于容器的持续集成工具呢？Drone.io 可能是最好的选择。&lt;/p&gt;</description></item><item><title>用 Makefile 构建 Go 程序</title><link>http://hanggi.me/post/golang/makefile-for-golang/</link><pubDate>Wed, 13 Nov 2019 11:12:54 +0900</pubDate><guid>http://hanggi.me/post/golang/makefile-for-golang/</guid><description>&lt;p&gt;用 Makefile 构建 go 程序&lt;/p&gt;</description></item><item><title>将 Docker 镜像传到 Docker Hub 私有仓库</title><link>http://hanggi.me/post/dev-guide/docker-repository/</link><pubDate>Wed, 28 Aug 2019 16:35:17 +0900</pubDate><guid>http://hanggi.me/post/dev-guide/docker-repository/</guid><description>&lt;p&gt;做好的 Docker 镜像必须要上传部署到服务器才能发挥它的作用，我们来上传到服务器部署一下。&lt;/p&gt;</description></item><item><title>微服务全局唯一 ID</title><link>http://hanggi.me/post/dev-guide/uid-comparison/</link><pubDate>Tue, 27 Aug 2019 15:31:57 +0900</pubDate><guid>http://hanggi.me/post/dev-guide/uid-comparison/</guid><description>&lt;p&gt;ID 是数据库的重要组成部分，但是随着分布式服务的流行传统的自增主键已经无法满足我们的需求。&lt;/p&gt;
&lt;p&gt;一种全局唯一的 ID 变得不可或缺。&lt;/p&gt;</description></item><item><title>go-micro 微服务开发手册【1】：介绍</title><link>http://hanggi.me/post/microservice/go-micro-guide-1/</link><pubDate>Wed, 21 Aug 2019 13:51:48 +0900</pubDate><guid>http://hanggi.me/post/microservice/go-micro-guide-1/</guid><description>&lt;p&gt;微服务开发手册。&lt;/p&gt;</description></item><item><title>Flutter 安装手册</title><link>http://hanggi.me/post/dev-guide/flutter-setup/</link><pubDate>Sun, 18 Aug 2019 13:24:00 +0900</pubDate><guid>http://hanggi.me/post/dev-guide/flutter-setup/</guid><description>&lt;p&gt;Flutter是一个由谷歌开发的开源移动应用软件开发工具包，用于为Android和iOS开发应用，同时也将是Google Fuchsia下开发应用的主要工具。&lt;/p&gt;</description></item><item><title>CentOS 生产环境安装 Docker</title><link>http://hanggi.me/post/deployment/centos-docker-install/</link><pubDate>Fri, 16 Aug 2019 15:18:23 +0900</pubDate><guid>http://hanggi.me/post/deployment/centos-docker-install/</guid><description>&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ yum info docker&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;CentOS 提供的 docker 默认版本为 &lt;code&gt;1.13.1&lt;/code&gt;，版本较低。&lt;/p&gt;
&lt;p&gt;我们来安装 &lt;code&gt;docker-ce&lt;/code&gt;&lt;/p&gt;</description></item><item><title>Kafka 安装配置</title><link>http://hanggi.me/post/dev-guide/kafka-setup/</link><pubDate>Thu, 15 Aug 2019 22:46:44 +0900</pubDate><guid>http://hanggi.me/post/dev-guide/kafka-setup/</guid><description>&lt;p&gt;Kafka是由Apache软件基金会开发的一个开源流处理平台，由Scala和Java编写。该项目的目标是为处理实时数据提供一个统一、高吞吐、低延迟的平台。其持久化层本质上是一个“按照分布式事务日志架构的大规模发布/订阅消息队列”，这使它作为企业级基础设施来处理流式数据非常有价值。&lt;/p&gt;</description></item><item><title>Web 框架所需基本特性</title><link>http://hanggi.me/post/web-framework-basics/</link><pubDate>Wed, 14 Aug 2019 11:21:49 +0900</pubDate><guid>http://hanggi.me/post/web-framework-basics/</guid><description>&lt;p&gt;整理一个Web框架所需的基本特性。&lt;br /&gt;
以下为一个Web框架所需的基本功能&lt;/p&gt;</description></item><item><title>Vultr搭建CentOS开发环境</title><link>http://hanggi.me/post/deployment/vultr-centos-setup/</link><pubDate>Fri, 09 Aug 2019 15:40:03 +0900</pubDate><guid>http://hanggi.me/post/deployment/vultr-centos-setup/</guid><description>&lt;p&gt;准备在 Vultr 上搭建新的开发环境。&lt;/p&gt;</description></item><item><title>Docker 开发手册</title><link>http://hanggi.me/post/dev-guide/docker-notes/</link><pubDate>Wed, 10 Jul 2019 17:00:01 +0900</pubDate><guid>http://hanggi.me/post/dev-guide/docker-notes/</guid><description>&lt;p&gt;Docker 使用笔记&lt;/p&gt;</description></item><item><title>Go Json</title><link>http://hanggi.me/post/golang/go-json/</link><pubDate>Wed, 29 May 2019 11:41:03 +0900</pubDate><guid>http://hanggi.me/post/golang/go-json/</guid><description>&lt;p&gt;Golang json demo code.&lt;/p&gt;</description></item><item><title>Go Awesome</title><link>http://hanggi.me/post/golang/go-awesome/</link><pubDate>Tue, 28 May 2019 15:40:03 +0900</pubDate><guid>http://hanggi.me/post/golang/go-awesome/</guid><description>&lt;p&gt;Some summary of go awesome projects, personally recommend:&lt;/p&gt;</description></item><item><title>Go Http Request</title><link>http://hanggi.me/post/golang/go-http-request/</link><pubDate>Mon, 27 May 2019 16:55:50 +0900</pubDate><guid>http://hanggi.me/post/golang/go-http-request/</guid><description>&lt;p&gt;Golang http request demo code.&lt;/p&gt;</description></item></channel></rss>